static const uint8_t __code lut154[] = {
	// lut0 (KEEP) voltages
	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut1 (W2B) voltages
	0x80,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut2 (B2W) voltages
	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut3 (unused) voltages
	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut4 (vcom) voltages
	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// group0 phase lengths and repeat count
	0x40,	0x0,	0x00,	0x00,	0x00,
	// group1 not used
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group2 not used
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group3 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group4 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group5 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group6 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
};


static const uint8_t __code lut29[] = {
	// lut0 (KEEP) voltages
	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut1 (W2B) voltages
	0x80,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut2 (B2W) voltages
	0x40,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut3 (unused) voltages
	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// lut4 (vcom) voltages
	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,	0x00,
	// group0 phase lengths and repeat count
//	0x10,	0x02,	0x00,	0x00,	0x03 - 1,
	0x05,	0x02,	0x00,	0x00,	0x00,

//	0x40,	0x00,	0x00,	0x00,	0x00,

	// group1 not used
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group2 not used
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group3 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
    // group4 phase lengths and repeat count
    0x00,	0x00,	0x00,	0x00,	0x00,
	// group5 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
	// group6 phase lengths and repeat count
	0x00,	0x00,	0x00,	0x00,	0x00,
};

static const uint8_t __code lutSHA[] = {
   // Voltages and other settings? Timing?
   0xA0,	0x90,	0x50,	0x0,	0x0,	0x0,	0x0,
   0x50,	0x90,	0xA0,	0x0,	0x0,	0x0,	0x0,
   0xA0,	0x90,	0x50,	0x0,	0x0,	0x0,	0x0,
   0x50,	0x90,	0xA0,	0x0,	0x0,	0x0,	0x0,
   0x00,	0x00,	0x00,	0x0,	0x0,	0x0,	0x0,

   // Update program
   //
   // Top three lines are the main program (bottom 4 have unknown function)
   // Line 1: Negative image
   // Line 2: White/Black flashing
   // Line 3: Positive image
   //
   // Line construction
   // First two bytes denote Intensity (range 0x00 to 0x0F)
   // Second two bytes denote lenght of each 'pulse' (range 0x00 to 0xFF)
   // Last byte denotes number of repeats (0 = line runs 1 time, range 0x00 to 0xFF)
   // If you don't want a line to do anything, set all bytes to 0x0.
   // This way you can make a quick update cycle between two screens.
   // Maybe not as pretty/crisp but nice and fast is also awesome!

   // Negative image
   // first two bytes negative image, length white pulse (0-FF), length black pulse (0-FF), last byte repeats

   0x0,	0x0,	0x0,	0x0,	0x0,

   //0xF,	0xF,	0x0,	0x0,	0x0,

   // White or black flash
   // white flash intensity, black flash intensity, length white pulse (0-FF), length black pulse (0-FF), repeats

   //0x0,	0x0,	0x0,	0x0,	0x00, 
   0xF,	0xF,	0x1,	0x1,	0x00,
      //0xF,	0xF,	0x0,	0x0,	0x02,


   // Positive image
   // first byte or second byte positive image (don't know why you need both), rest same as above

   0xF,	0xF,	0x0,	0x0,	0x0,

   // Unknown what lines below actually do.
   // They seem to be programs to, but have no visible effect on dislay.
   0x0F,	0x0F,	0x0,	0x0,	0x0,
   0x0F,	0x0F,	0x0,	0x0,	0x0,
   0x0F,	0x0F,	0x0,	0x0,	0x0,
   0x0F,	0x0F,	0x0,	0x0,	0x0,
};

static const uint8_t __code lutorig[] = {
    0x00, 0x66, 0x21, 0x45, 0x40, 0x00, 0x00,
    0x15, 0x66, 0x21, 0xA8, 0x20, 0xA0, 0x00,
    0xA0, 0x66, 0x21, 0x85, 0x2B, 0x2F, 0x00,
    0xA0, 0x66, 0x21, 0x85, 0x2B, 0x2F, 0x00,
    0x00, 0x00, 0x12, 0x48, 0x00, 0x00, 0x00,
    //0x04, 0x49, 0x2F, 0x2A, 0x00,
    0x0,  0x0,  0x0,  0x0,  0x0,
    0x02, 0x04, 0x01, 0x03, 0x00, // was 11 repeat
    0x01, 0x14, 0x01, 0x14, 0x00, // was 3 repeat
    0x02, 0x0A, 0x03, 0x0A, 0x00, // was 2 repeat
    0x06, 0x04, 0x04, 0x20, 0x00, // was 3 rpeat
    0x04, 0x04, 0x02, 0x26, 0x00, // was 3 repeat
    0x00, 0x00, 0x00, 0x00, 0x0,  
};